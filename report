Introduction:
Our project was to create a server that would provide livestreaming video to a HTTP client. We accomplished this by listening for an HTTP request, then responding to the request by reading a video file stream that is generated by FFMPEG.

Initiating the Connection:
The server first does the standard socket create, bind, and listen. We do this on port 8000. Then we loop and wait for an HTTP GET request to be iniated. This GET request is generated by the client web browser when it interprets a video embed tag links to our server. This GET request differs on the web browser used. For our project, we decided to ensure compatibilty with Mozilla Firefox and use it as our test client. 

Once the GET request is recieved, we then sent back a 200 OK reply

 HTTP/1.0 200 OK  
 Date: *Current Date*
 Connection: close  
 Cache-control: private 
 Content-type: video/ogg  
 Server: *Our Server*
 
This then finishes the initiation communication between the client and the server. Now both client and server understand that we will be transmitting a video stream in the OGG format. 

Capturing Video:
For capturing the content we wish to stream, we decided to use FFMPEG. 
